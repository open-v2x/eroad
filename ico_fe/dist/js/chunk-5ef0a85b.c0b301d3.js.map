{"version":3,"sources":["webpack:///./src/components/pages/Admin/Device/index.vue?906c","webpack:///./src/components/pages/Admin/Device/Components/DeviceModal.vue?680b","webpack:///./src/components/pages/Admin/Device/Components/DeviceModal.vue","webpack:///./src/components/pages/Admin/Device/Components/DeviceModal.vue?be86","webpack:///./src/components/pages/Admin/Device/index.vue","webpack:///./src/components/pages/Admin/Device/index.vue?3a81","webpack:///./src/components/pages/Admin/Service/codeMessage.js","webpack:///./src/components/pages/Admin/Service/request.js","webpack:///./src/components/pages/Admin/Service/module/device.js","webpack:///./src/components/pages/Admin/Service/module/system.js"],"names":["props","__props","emit","__emit","formRef","ref","dependencyOptions","networkTypeOptions","form","deviceId","deviceName","deviceType","manufacturer","networkType","parentDeviceId","dependency","deviceArea","port","deviceIp","domainName","longitude","latitude","altitude","version","comment","rules","required","message","trigger","closeModal","saveData","async","validate","value","fetch","currentData","deviceEditList","deviceAddList","head","code","ElMessage","error","msg","err","console","log","fetchSystemData","res","systemrpcFind","data","body","map","item","label","dictName","dictEncoding","onMounted","__exports__","tableData","total","isModalVisible","currentType","multipleSelection","manufacturerOptions","deviceTypeOptions","searchForm","reactive","pageNum","pageSize","getTagType","alarmState","handleSelectionChange","val","handleAdd","successDeviceModal","fetchDataList","handleView","index","row","handleEdit","handleRest","conform","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","getDeviceList","list","totalCount","search","resetForm","resetFields","handleBatchDelete","length","warning","then","deviceDeleteList","success","catch","handleDelete","handleSizeChange","handleCurrentChange","codeMessage","200","201","202","204","400","401","403","404","405","406","408","410","422","500","501","502","503","504","505","axios","defaults","headers","post","axiosInstance","create","timeout","interceptors","request","use","config","accessToken","sessionStorage","getItem","Authorization","Promise","reject","response","status","resolve","includes","requestObj","get","url","options","delete","put","patch","method","deviceExcelExport","deviceAlarmPage","deviceAlarmExpire","systemDictAdd","systemDictDelete","systemDictFind","params","systemDictList","systemDictUpdate","systemLogList","systemLogDel"],"mappings":"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","file":"js/chunk-5ef0a85b.c0b301d3.js","sourcesContent":["export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=f0e80b76&lang=less\"","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DeviceModal.vue?vue&type=style&index=0&id=d86eb928&scoped=true&lang=css\"","<template>\n  <el-dialog\n    v-model=\"props.visible\"\n    :title=\"currentData.deviceId ? '设备编辑' : '设备新增'\"\n    :before-close=\"closeModal\"\n  >\n    <el-form\n      ref=\"formRef\"\n      :model=\"form\"\n      :rules=\"rules\"\n      label-width=\"120px\"\n      class=\"demo-form\"\n      status-icon\n      :disabled=\"currentType === 'view'\"\n    >\n      <div class=\"form-row\">\n        <el-form-item label=\"设备编码\" prop=\"deviceId\">\n          <el-input v-model=\"form.deviceId\" :disabled=\"currentType === 'view' || currentType === 'edit'\"/>\n        </el-form-item>\n        <el-form-item label=\"设备名称\" prop=\"deviceName\">\n          <el-input v-model=\"form.deviceName\" />\n        </el-form-item>\n      </div>\n      <div class=\"form-row\">\n        <el-form-item label=\"设备类型\" prop=\"deviceType\">\n          <el-select v-model=\"form.deviceType\" placeholder=\"设备厂商\">\n            <el-option\n              v-for=\"item in deviceTypeOptions\"\n              :key=\"item.id\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"厂商\" prop=\"manufacturer\">\n          <el-select v-model=\"form.manufacturer\" placeholder=\"设备厂商\">\n            <el-option\n              v-for=\"item in manufacturerOptions\"\n              :key=\"item.id\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n      </div>\n      <div class=\"form-row\">\n        <el-form-item label=\"网络类型\" prop=\"networkType\">\n          <el-select v-model=\"form.networkType\" placeholder=\"属地\">\n            <el-option\n              v-for=\"item in networkTypeOptions\"\n              :key=\"item.id\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"父设备编码\" prop=\"parentDeviceId\">\n          <el-input v-model=\"form.parentDeviceId\" />\n        </el-form-item>\n      </div>\n      <div class=\"form-row\">\n        <el-form-item label=\"属地\" prop=\"dependency\">\n          <el-select v-model=\"form.dependency\" placeholder=\"属地\">\n            <el-option\n              v-for=\"item in dependencyOptions\"\n              :key=\"item.id\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"设备区划\" prop=\"deviceArea\">\n          <el-input v-model=\"form.deviceArea\" />\n        </el-form-item>\n      </div>\n      <div class=\"form-row\">\n        <el-form-item label=\"端口\" prop=\"port\">\n          <el-input v-model=\"form.port\" />\n        </el-form-item>\n        <el-form-item label=\"设备IP\" prop=\"deviceIp\">\n          <el-input v-model=\"form.deviceIp\" />\n        </el-form-item>\n      </div>\n      <div class=\"form-row\">\n        <el-form-item label=\"服务IP或域名\" prop=\"domainName\">\n          <el-input v-model=\"form.domainName\" />\n        </el-form-item>\n        <el-form-item label=\"经度\" prop=\"longitude\">\n          <el-input v-model=\"form.longitude\" />\n        </el-form-item>\n      </div>\n      <div class=\"form-row\">\n        <el-form-item label=\"纬度\" prop=\"latitude\">\n          <el-input v-model=\"form.latitude\" />\n        </el-form-item>\n        <el-form-item label=\"高程\" prop=\"altitude\">\n          <el-input v-model=\"form.altitude\" />\n        </el-form-item>\n      </div>\n      <div class=\"form-row\">\n        <el-form-item label=\"版本\" prop=\"version\">\n          <el-input v-model=\"form.version\" />\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"comment\">\n          <el-input v-model=\"form.comment\" />\n        </el-form-item>\n      </div>\n    </el-form>\n    <template #footer>\n      <div class=\"dialog-footer\">\n        <el-button @click=\"closeModal\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"saveData\">确 认</el-button>\n      </div>\n    </template>\n  </el-dialog>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { systemrpcFind, deviceAddList, deviceEditList } from '../../Service/api'\nimport { ElMessage } from 'element-plus'\n\nconst props = defineProps({\n  visible: {\n    type: Boolean,\n    default: true,\n  },\n  currentData: {\n    type: Object,\n    default: () => ({}),\n  },\n  currentType: {\n    type: String,\n    default: ''\n  },\n  onClose: Function,\n  deviceTypeOptions: {\n    type: Array,\n    default: () => [],\n  },\n  manufacturerOptions: {\n    type: Array,\n    default: () => [],\n  }\n})\n\nconst emit = defineEmits(['close', 'success'])\n\nconst formRef = ref(null)\nconst dependencyOptions = ref([])\nconst networkTypeOptions = ref([])\nconst form = ref({\n  deviceId: '',\n  deviceName: '',\n  deviceType: '',\n  manufacturer: '',\n  networkType: '',\n  parentDeviceId: '',\n  dependency: '',\n  deviceArea: '',\n  port: '',\n  deviceIp: '',\n  domainName: '',\n  longitude: '',\n  latitude: '',\n  altitude: '',\n  version: '',\n  comment: '',\n})\n\nconst rules = {\n  deviceId: [\n    {\n      required: true,\n      message: '请输入设备编码',\n      trigger: 'blur',\n    },\n  ],\n  deviceName: [\n    {\n      required: true,\n      message: '请输入设备名称',\n      trigger: 'blur',\n    },\n  ],\n  deviceType: [\n    {\n      required: true,\n      message: '请选择设备类型',\n      trigger: 'change',\n    },\n  ],\n  manufacturer: [\n    {\n      required: true,\n      message: '请选择厂商',\n      trigger: 'change',\n    },\n  ],\n}\n\nconst closeModal = () => {\n  emit('close')\n}\n\nconst saveData = async () => {\n  try {\n    const validate = await formRef.value.validate()\n    if (!validate) return\n    const fetch = props.currentData.deviceId ? deviceEditList : deviceAddList;\n    const { head } = await fetch(form.value)\n    if (head.code === '000000') {\n      emit('success')\n      closeModal() // 关闭弹窗\n    }else {\n      ElMessage.error(head.msg || '保存失败')\n    }\n  } catch (err) {\n    console.log(err, 'err');\n  }\n}\n\nconst fetchSystemData = async (data) => {\n  try {\n    const res = await systemrpcFind(data);\n    return res.body.map((item) => {\n      return {\n        ...item,\n        label: item.dictName,\n        value: item.dictEncoding\n      }\n    })\n  } catch (error) {\n    console.error('Error fetching system data:', error); // 处理错误情况\n  }\n}\n\nonMounted(async () => {\n  dependencyOptions.value = await fetchSystemData({ dictEncoding: 'dependency' })\n  networkTypeOptions.value = await fetchSystemData({ dictEncoding: 'networkType' })\n  if (props.currentData.deviceId) {\n    form.value = { ...props.currentData };\n  }\n})\n</script>\n\n<style scoped>\n.dialog-footer {\n  text-align: right;\n}\n\n.form-row {\n  display: flex;\n  justify-content: space-between;\n  gap: 20px; /* 添加间距 */\n}\n\n.el-form-item {\n  flex: 1;\n}\n\n.demo-form .el-form-item:nth-child(even) {\n  margin-left: 20px;\n}\n</style>\n","import script from \"./DeviceModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DeviceModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DeviceModal.vue?vue&type=style&index=0&id=d86eb928&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/limeiwang/telecom/qianhai/nationalproject5/ico_fe/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d86eb928\"]])\n\nexport default __exports__","<template>\n  <div class=\"device-page\">\n    <el-breadcrumb>\n      <el-breadcrumb-item>设备管理</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <el-card shadow=\"never\" class=\"search-card\">\n      <!-- 搜索表单 -->\n      <el-form :inline=\"true\" :model=\"searchForm\" ref=\"formRef\">\n        <el-form-item label=\"设备类型\" prop=\"deviceType\">\n          <el-select v-model=\"searchForm.deviceType\" placeholder=\"设备厂商\">\n            <el-option\n              v-for=\"item in deviceTypeOptions\"\n              :key=\"item.id\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"设备厂商\" prop=\"manufacturer\">\n          <el-select v-model=\"searchForm.manufacturer\" placeholder=\"设备厂商\">\n            <el-option\n              v-for=\"item in manufacturerOptions\"\n              :key=\"item.id\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"在线状态\" prop=\"onlineState\">\n          <el-select v-model=\"searchForm.onlineState\" placeholder=\"在线状态\">\n            <el-option label=\"在线\" :value=\"0\" />\n            <el-option label=\"离线\" :value=\"1\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"告警状态\" prop=\"alarmState\">\n          <el-select v-model=\"searchForm.alarmState\" placeholder=\"告警状态\">\n            <el-option label=\"正常\" :value=\"0\" />\n            <el-option label=\"告警\" :value=\"1\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"设备编码\" prop=\"deviceCode\">\n          <el-input v-model=\"searchForm.deviceCode\" placeholder=\"设备编码\" />\n        </el-form-item>\n        <el-form-item label=\"设备名称\" prop=\"deviceName\">\n          <el-input v-model=\"searchForm.deviceName\" placeholder=\"设备名称\" />\n        </el-form-item>\n        <el-form-item>\n          <el-button @click=\"resetForm\">重 置</el-button>\n          <el-button type=\"primary\" @click=\"search\">查 询</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card shadow=\"never\" class=\"table-card\">\n      <!-- 按钮操作区 -->\n      <el-button type=\"primary\" @click=\"handleAdd\">新 增</el-button>\n      <el-button type=\"primary\" @click=\"handleBatchDelete\">批量删除</el-button>\n      <!-- <el-upload\n        v-model:file-list=\"fileList\"\n        :show-file-list=\"false\"\n        class=\"upload-demo\"\n        action=\"\"\n        multiple\n      >\n        <el-button type=\"primary\">批量导入</el-button>\n      </el-upload>\n      <el-button type=\"primary\" @click=\"handleBatchExport\">批量导出</el-button> -->\n      <!-- 设备列表 -->\n      <el-table :data=\"tableData\" border @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" />\n        <el-table-column prop=\"deviceId\" label=\"设备编码\" width=\"180\"/>\n        <el-table-column prop=\"deviceName\" label=\"设备名称\" width=\"180\"/>\n        <el-table-column prop=\"deviceType\" label=\"设备类型\">\n          <template #default=\"slot\">\n            <span>\n              {{ deviceTypeOptions.find(item => item.value === slot.row.deviceType).label }}\n            </span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"manufacturer\" label=\"设备厂商\">\n          <template #default=\"slot\">\n            <span>\n              {{ manufacturerOptions.find(item => item.value === slot.row.manufacturer).label }}\n            </span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"onlineState\" label=\"在线状态\">\n          <template #default=\"slot\">\n            <el-tag :type=\"getTagType(slot.row.alarmState)\">\n              {{ slot.row.alarmState === 0 ? '在线' : '离线'}}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"alarmState\" label=\"告警状态\">\n          <template #default=\"slot\">\n            <el-tag :type=\"getTagType(slot.row.alarmState)\">\n              {{ slot.row.alarmState === 0 ? '正常' : '告警'}}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"networkLink\" label=\"网络状态\">\n          <template #default=\"slot\">\n            <span>{{ slot.row.networkLink === 0 ? '无网络' : '有网络'}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\">\n          <template #default=\"scope\">\n            <el-button text size=\"small\" type=\"primary\" @click=\"handleView(scope.$index, scope.row)\">详情</el-button>\n            <el-button text size=\"small\" type=\"primary\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n            <el-button text size=\"small\" type=\"primary\" @click=\"handleRest(scope.$index, scope.row)\">重启</el-button>\n            <el-button text size=\"small\" type=\"primary\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页器 -->\n      <el-pagination\n        v-model:current-page=\"searchForm.pageNum\"\n        v-model:page-size=\"searchForm.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100, 200]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        size=\"small\"\n        background\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n  </div>\n\n  <DeviceModal\n    v-if=\"isModalVisible\"\n    @success=\"successDeviceModal\"\n    @close=\"isModalVisible = false\"\n    :currentData=\"currentData\"\n    :currentType=\"currentType\"\n    :deviceTypeOptions=\"deviceTypeOptions\"\n    :manufacturerOptions=\"manufacturerOptions\"\n  />\n</template>\n\n<script setup>\nimport DeviceModal from './Components/DeviceModal.vue'\nimport { ref, reactive, onMounted } from 'vue'\nimport { getDeviceList, systemrpcFind, deviceDeleteList, deviceExcelImport, deviceExcelExport } from '../Service/api'\nimport { ElMessage, ElMessageBox } from 'element-plus'\n\nconst tableData = ref([])\nconst total = ref(0) // 用于记录总条目数\nconst formRef = ref()\nconst isModalVisible = ref(false)\nconst currentData = ref({})\nconst currentType = ref('add')\nconst multipleSelection = ref([])\nconst manufacturerOptions = ref([])\nconst deviceTypeOptions = ref([])\nconst fileList = ref([])\n\nconst searchForm = reactive({\n  pageNum: 1,\n  pageSize: 10\n})\n\nconst getTagType = (alarmState) => {\n  return alarmState === 0 ? 'success' : 'danger';\n}\nconst handleSelectionChange = (val) => {\n  console.log(val);\n  multipleSelection.value = val;\n}\n\nconst handleAdd = () => {\n  currentData.value = {}\n  currentType.value = 'add'\n  isModalVisible.value = true\n}\n\nconst successDeviceModal = () => {\n  isModalVisible.value = false\n  fetchDataList() // 重新获取数据\n}\n\nconst handleView = (index, row) => {\n  currentData.value = row\n  currentType.value = 'view'\n  isModalVisible.value = true\n}\n\nconst handleEdit = (index, row) => {\n  currentData.value = row\n  currentType.value = 'edit'\n  isModalVisible.value = true\n}\n\nconst handleRest = async () => {\n  const conform = await ElMessageBox.confirm(\n    '确认要重启吗？',\n    '提示',\n    {\n      confirmButtonText: '确认',\n      cancelButtonText: '取消',\n      type: '提示',\n    }\n  )\n  if (!conform) return\n  ElMessage({\n    message: '重启成功',\n    type: 'success',\n  })\n}\n\nconst fetchDataList = async () => {\n  try {\n    const { body } = await getDeviceList(searchForm)\n    tableData.value = body.list\n    total.value = body.totalCount // 更新总条目数\n  } catch (error) {\n    console.log(error);\n  }\n}\nconst fetchSystemData = async (data) => {\n  try {\n    const res = await systemrpcFind(data);\n    return res.body.map((item) => {\n      return {\n        ...item,\n        label: item.dictName,\n        value: item.dictEncoding\n      }\n    })\n  } catch (error) {\n    console.error('Error fetching system data:', error); // 处理错误情况\n  }\n}\n\n\nconst search = () => {\n  searchForm.pageNum = 1 // 查询时重置页码\n  fetchDataList()\n}\n\n\nconst resetForm = () => {\n  searchForm.pageNum = 1\n  searchForm.pageSize = 10\n  formRef.value.resetFields()\n  fetchDataList() // 重置后重新获取数据\n}\n\nconst handleBatchDelete = () => {\n  if (multipleSelection.value.length === 0) {\n    ElMessage.warning('没有选中任何设备，请重新选择');\n    return false;\n  }\n\n  ElMessageBox.confirm(\n    '确认要批量删除吗？',\n    '提示',\n    {\n      confirmButtonText: '确认',\n      cancelButtonText: '取消',\n      type: '提示',\n    }\n  )\n  .then(async () => {\n    const {head} = await deviceDeleteList({deviceId: multipleSelection.value.map(item => item.deviceId)})\n    if (head.code === '000000') {\n      ElMessage.success('删除成功')\n      fetchDataList()\n    } else {\n      ElMessage.error('删除失败')\n    }\n  })\n  .catch(() => {})\n}\n\nconst handleDelete = async (index, row) => {\n  const conform = await ElMessageBox.confirm(\n    '确认要删除吗？',\n    '提示',\n    {\n      confirmButtonText: '确认',\n      cancelButtonText: '取消',\n      type: '提示',\n    }\n  )\n  if (!conform) return\n  const {head} = await deviceDeleteList({deviceId: [row.deviceId]})\n  if (head.code === '000000') {\n    ElMessage.success('删除成功')\n    fetchDataList()\n  } else {\n    ElMessage.error('删除失败')\n  }\n\n}\n\nconst handleBatchExport = async () => {\n  if (multipleSelection.value.length === 0) {\n    ElMessage.warning('没有选中任何设备，请重新选择');\n    return false;\n  }\n  try {\n    const res = await deviceExcelExport(multipleSelection.value)\n    if (!res) {\n      throw new Error('Network res was not ok');\n    }\n    const blob = new Blob([res])\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = '设备列表.xlsx';\n    document.body.appendChild(a);\n    a.click();\n    // 移除a标签\n    document.body.removeChild(a);\n    // 释放Object URL，防止内存泄漏\n    window.URL.revokeObjectURL(url);\n  } catch (err) {\n    console.error('Error exporting data:', err);\n  }\n}\n\nconst handleBatchImport = async () => {\n\n}\nconst downloadFile = (blobData, fileName) => {\n  // 创建下载链接\n  const url = URL.createObjectURL(blobData);\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', fileName);\n  link.style.visibility = 'hidden';\n  document.body.appendChild(link);\n\n  // 触发点击事件进行下载\n  link.click();\n\n  // 清理\n  document.body.removeChild(link);\n  URL.revokeObjectURL(url);\n};\nconst handleSizeChange = (val) => {\n  searchForm.pageSize = val\n  fetchDataList() // 当页面大小变化时重新获取数据\n}\n\nconst handleCurrentChange = (val) => {\n  searchForm.pageNum = val\n  fetchDataList() // 当当前页码变化时重新获取数据\n}\n\nonMounted(async () => {\n  fetchDataList()\n  manufacturerOptions.value = await fetchSystemData({ dictEncoding: 'manufacturer' })\n  deviceTypeOptions.value = await fetchSystemData({ dictEncoding: 'deviceType' })\n})\n</script>\n\n<style lang=\"less\">\n.el-form--inline {\n  .el-form-item {\n    & > .el-input, .el-cascader, .el-select, .el-date-editor, .el-autocomplete {\n      width: 9vw;\n    }\n  }\n}\n.device-page {\n  .el-breadcrumb {\n    margin-bottom: 20px;\n  }\n  .search-card {\n    margin-bottom: 20px;\n    .el-card__body {\n      padding-bottom: 0;\n    }\n  }\n\n  .action {\n    display: flex;\n    justify-content: flex-end;\n    .upload-demo {\n      margin: 0 10px;\n    }\n  }\n\n  .table-card {\n    .el-card__body {\n      text-align: right;\n      .el-table {\n        margin-top: 20px;\n      }\n      .el-pagination {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=f0e80b76&lang=less\"\n\nconst __exports__ = script;\n\nexport default __exports__","const codeMessage = {\n  200: '服务器成功返回请求的数据。',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '请求错误',\n  401: '未授权，请登录',\n  403: '拒绝访问',\n  404: '请求地址出错',\n  405: '请求方法不被允许。',\n  406: '请求的格式不可得。',\n  408: '请求超时',\n  410: '请求的资源被永久删除',\n  422: '创建一个对象时，发生一个验证错误。',\n  500: '服务器内部错误',\n  501: '服务未实现',\n  502: '网关错误',\n  503: '服务不可用，服务器暂时过载或维护',\n  504: '网关超时',\n  505: 'HTTP版本不受支持'\n}\n\nexport default codeMessage\n","import axios from 'axios'\nimport codeMessage from './codeMessage'\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'\n\nconst axiosInstance = axios.create({\n  timeout: 10000\n})\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const accessToken = sessionStorage.getItem('access_token')\n    if (accessToken) {\n      return {\n        ...config,\n        headers: {\n          ...config.headers,\n          Authorization: accessToken ? `Bearer ${accessToken}` : ''\n        }\n      }\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  }\n)\n\naxiosInstance.interceptors.response.use(\n  (response) => {\n    if (response.status === 200) {\n      return Promise.resolve(response.data)\n    } else {\n      return Promise.reject(response)\n    }\n  },\n  (error) => {\n    if (error.message.includes('timeout')) {\n      console.error('timeout')\n    } else {\n      console.error(\n        codeMessage[error.response.status]\n      )\n      if (error.response.status === 403) console.error('403')\n    }\n    Promise.reject(error)\n  }\n)\n\nconst requestObj = {\n  get: (url, options) => {\n    return axiosInstance.get(url, options)\n  },\n  delete: (url, options) => {\n    return axiosInstance.delete(url, options)\n  },\n  post: (url, data, options) => {\n    return axiosInstance.post(url, data, options)\n  },\n  put: (url, data, options) => {\n    return axiosInstance.put(url, data, options)\n  },\n  patch: (url, data,  options) => {\n    return axiosInstance.patch(url, data, options)\n  }\n}\n\nconst request = (url, options) => {\n  const method = options.method !== null ? options.method : 'GET';\n\n  if (method === 'GET') {\n    return requestObj.get(url, options)\n  }\n  if (method === 'DELETE') {\n    return requestObj.delete(url, options)\n  }\n  if (method === 'POST') {\n    return requestObj.post(url, options.data, options)\n  }\n  if (method === 'PUT') {\n    return requestObj.post(url, options.data, options)\n  }\n  if (method === 'PATCH') {\n    return requestObj.patch(url, options.data, options)\n  }\n\n  return requestObj.get(url, options)\n}\n\nexport { axiosInstance, request }\n","import { request } from '../request'\n\nexport const getDeviceList = (data) => {\n  return request('/device/api/list', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceAddList = (data) => {\n  return request('/device/add', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceEditList = (data) => {\n  return request('/device/edit', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceDeleteList = (data) => {\n  return request('/device/del', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceDetailList = (data) => {\n  return request('/device/selectById', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceExcelImport = (data) => {\n  return request('/device/excelImport', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceExcelExport = (data) => {\n  return request('/device/excelExport', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceAlarmPage = (data) => {\n  return request('/device/alarm/page', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceAlarmExpire = (data) => {\n  return request('/device/alarm/expire', {\n    method: 'POST',\n    data\n  })\n}\n","import { request } from '../request'\n\nexport const systemDictAdd = (data) => {\n  return request('/system/dict/add', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictDelete = (data) => {\n  return request('/system/dict/delete', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictFind = (params) => {\n  return request('/system/dict/find', {\n    method: 'GET',\n    params\n  })\n}\n\nexport const systemDictFindAll = (data) => {\n  return request('/system/dict/findAll', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictList = (data) => {\n  return request('/system/dict/list', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictRpcFind = (data) => {\n  return request('/system/dict/rpc/find', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictUpdate = (data) => {\n  return request('/system/dict/update', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemrpcFind = (params) => {\n  return request('/system/dict/rpc/find', {\n    method: 'GET',\n    params\n  })\n}\n\nexport const systemLogList = (data) => {\n  return request('/system/log/list', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemLogDel = (data) => {\n  return request('/system/log/del', {\n    method: 'POST',\n    data\n  })\n}\n"],"sourceRoot":""}