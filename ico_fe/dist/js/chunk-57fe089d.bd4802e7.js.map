{"version":3,"sources":["webpack:///./src/assets/js/api_video.js","webpack:///./src/assets/config/hmac_sha256.js","webpack:///./src/assets/config/hashMap.js","webpack:///./src/assets/js/api.js"],"names":["queryAllChannels","fetch","queryChannelsByDeviceId","params","deviceId","sendDevicePush","channelId","queryByChannelName","channelName","deviceProxyPlay","vedioLogin","axios","url","method","headers","data","password","username","seekPlayBack","setPlayBackPaused","setPlayBackSpeed","formData","withMask","config","Error","isPOST","Promise","resolve","reject","request","_headers","Authorization","JSON","parse","localStorage","getItem","then","res","code","setItem","stringify","requestUrl","resErr","subCode","status","err","finally","console","log","HmacSHA256","uint8Array","Uint8Array","uint32Array","Uint32Array","pow","Math","DEFAULT_STATE","ROUND_CONSTANTS","M","getFractionalBits","n","nPrime","isPrime","factor","LittleEndian","buffer","convertEndian","word","rightRotate","bits","sha256","round","STATE","slice","legth","length","bitLength","newBitLength","bytes","words","set","block","workingState","MRound","gamma0x","gamma1x","t1","t2","i","map","val","hmac","key","tmp","innerKey","outerKey","msg","result","encoder","TextEncoder","this","sign","inputData","inputKey","encode","value","reduce","acc","toString","substr","toUpperCase","hash","str","hex","bin","HashMap","specialKey","speicalValue","Array","speicalFlag","normalHashMap","put","get","clear","containsKey","containsValue","contains","v","size","isEmpty","remove","k","keySet","getStr","entrySet","values","flag","substring","signAndTime","time","Date","getTime","hashMap","hmacSHA","timestamp","urlCheckout","pro","dev","api_environment","loginOs","grant_type","scope","getUserInfo","access_token","getWeather","dataToken","rad_tra_flow_10min","real_flow","Object","assign","predict_flow","overflow_rate","crossroad_detail_list","ads_sc_rad_tci_10min","ads_sc_rad_road_accum_tra_flow","ads_sc_rad_road_tci_10min","road_section_avgspeed_10min","waitNum","crossroad_name","getTrafficJam","road_section_jam","total_avgspeed"],"mappings":"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","file":"js/chunk-57fe089d.bd4802e7.js","sourcesContent":["import axios from 'axios';\nimport router from '../../router';\n\n\n\nexport const queryAllChannels = () => fetch(`/api/device/query/allChannels`, {}, 'GET');\nexport const queryChannelsByDeviceId = params => fetch(`/api/device/query/allChannels?deviceId=${params.deviceId}`, {}, 'GET');\nexport const sendDevicePush = params => fetch(\n  `/api/play/start/${params.deviceId}/${params.channelId}`, {}, 'GET'\n);\nexport const queryByChannelName = params => fetch(`/api/device/query/getAllChannels?channelName=${params.channelName}`, {}, 'GET')\nexport const queryBydeviceName = params => fetch(`/api/device/query/devices?page=1&count=10&deviceName=${params.deviceName}`, {}, 'GET')\n\nexport const deviceProxyPlay = (params) => fetch('/api/proxy/deviceProxyPlay', params, 'POST');\n\n\nexport const vedioLogin = () => axios({//视频接口登录获取token\n  url: '/api/user/newLogin',\n  method: 'post',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  data : {\n    password: \"UtkddkQdBAbus2ODE351VApNsv89V1RvHoHcF7yrq2X7JSz8v7khEC2d6C/FDz140ufbIrxOvbHeQbwyGPBsgA==\",\n    username: \"IOC\"\n  }\n})\n\n\n\n\n\n\n\n\n\n\nexport const cloudRecord = (params) => fetch('/api/cloudRecord/startPlayBack', params, 'GET');\n\n\n\n\nexport const seekPlayBack = (params) => fetch('/api/cloudRecord/seekPlayBack', params, 'GET',\n)\n\n\nexport const setPlayBackPaused = (params) => fetch('/api/cloudRecord/setPlayBackPaused', params, 'POST')\n\n\n\n\nexport const setPlayBackSpeed = (params) => fetch('/api/cloudRecord/setPlayBackSpeed', params, 'GET')\n\n\n\nfunction fetch(url, params = {}, method = 'POST', formData = false, { withMask = true, ...config } = {}) {\n  if (!url) {\n    throw new Error('interface path not found');\n  }\n  let isPOST = method === 'POST'\n  return new Promise((resolve, reject) => {\n    console.log(params)\n    request();\n    function request() {\n      let _headers = {\n        Authorization: `Bearer ${JSON.parse(localStorage.getItem('vedioToken'))}`,\n        'Cache-Control': 'no-cache',\n        'Content-Type': 'application/json'\n      }\n      axios({\n        url: url,\n        method,\n        params: isPOST ? '' : params,\n        data: isPOST ? params : '',\n        headers: _headers,\n        ...config\n      }).then(res => {\n        if (res.code === 401) {\n          vedioLogin().then((res) => {\n            if(res.code==200){\n              localStorage.setItem('vedioToken', JSON.stringify(res.data))\n              request();\n            }\n          });\n          // code401 token过期后重新请求视界token，获取到token后重新执行失败的axios，将成功结果resolve。\n        } else if (res.code === -1) {\n          reject({ requestUrl: url, resErr: res });\n        } else if (res.code === 403) {\n          reject({ requestUrl: url, resErr: res });\n        } else if ((res.code == 200 || res.code == 0 || res.subCode == 1) && (typeof (res.code !== 'undefined')) || +res.status === 1) {\n          resolve(res);\n        } else {\n          //Message.warning(res.subMessage || res.message || '内部错误，请稍候再试');\n          resolve(res);//TODO接口规范统一后再完善，返回状态码暂不统一\n          //reject(res);\n        }\n\n      }, err => {\n        //Message.warning('请求异常，请重新登录')\n        //withMask && loading.loadingEnd();\n        reject({ requestUrl: url, resErr: err });\n      }).finally(() => {\n        //withMask && loading.loadingEnd();\n      });\n    }\n  });\n}\n","function HmacSHA256() {\n    // To ensure cross-browser support even without a proper SubtleCrypto\n    // impelmentation (or without access to the impelmentation, as is the case with\n    // Chrome loaded over HTTP instead of HTTPS), this library can create SHA-256\n    // HMAC signatures using nothing but raw JavaScript\n\n    /* eslint-disable no-magic-numbers, id-length, no-param-reassign, new-cap */\n\n    // By giving internal functions names that we can mangle, future calls to\n    // them are reduced to a single byte (minor space savings in minified file)\n    var uint8Array = Uint8Array;\n    var uint32Array = Uint32Array;\n    var pow = Math.pow;\n\n    // Will be initialized below\n    // Using a Uint32Array instead of a simple array makes the minified code\n    // a bit bigger (we lose our `unshift()` hack), but comes with huge\n    // performance gains\n    var DEFAULT_STATE = new uint32Array(8);\n    var ROUND_CONSTANTS = [];\n\n    // Reusable object for expanded message\n    // Using a Uint32Array instead of a simple array makes the minified code\n    // 7 bytes larger, but comes with huge performance gains\n    var M = new uint32Array(64);\n\n    // After minification the code to compute the default state and round\n    // constants is smaller than the output. More importantly, this serves as a\n    // good educational aide for anyone wondering where the magic numbers come\n    // from. No magic numbers FTW!\n    var getFractionalBits = function (n) {\n        return ((n - (n | 0)) * pow(2, 32)) | 0;\n    }\n\n    var n = 2, nPrime = 0;\n    while (nPrime < 64) {\n        // isPrime() was in-lined from its original function form to save\n        // a few bytes\n        var isPrime = true;\n        // Math.sqrt() was replaced with pow(n, 1/2) to save a few bytes\n        // var sqrtN = pow(n, 1 / 2);\n        // So technically to determine if a number is prime you only need to\n        // check numbers up to the square root. However this function only runs\n        // once and we're only computing the first 64 primes (up to 311), so on\n        // any modern CPU this whole function runs in a couple milliseconds.\n        // By going to n / 2 instead of sqrt(n) we net 8 byte savings and no\n        // scaling performance cost\n        for (var factor = 2; factor <= n / 2; factor++) {\n            if (n % factor === 0) {\n                isPrime = false;\n            }\n        }\n        if (isPrime) {\n            if (nPrime < 8) {\n                DEFAULT_STATE[nPrime] = getFractionalBits(pow(n, 1 / 2));\n            }\n            ROUND_CONSTANTS[nPrime] = getFractionalBits(pow(n, 1 / 3));\n\n            nPrime++;\n        }\n\n        n++;\n    }\n\n    // For cross-platform support we need to ensure that all 32-bit words are\n    // in the same endianness. A UTF-8 TextEncoder will return BigEndian data,\n    // so upon reading or writing to our ArrayBuffer we'll only swap the bytes\n    // if our system is LittleEndian (which is about 99% of CPUs)\n    var LittleEndian = !!new uint8Array(new uint32Array([1]).buffer)[0];\n\n    var convertEndian = function (word) {\n        if (LittleEndian) {\n            return (\n                // byte 1 -> byte 4\n                (word >>> 24) |\n                // byte 2 -> byte 3\n                (((word >>> 16) & 0xff) << 8) |\n                // byte 3 -> byte 2\n                ((word & 0xff00) << 8) |\n                // byte 4 -> byte 1\n                (word << 24)\n            );\n        }\n        else {\n            return word;\n        }\n    }\n\n    var rightRotate = function (word, bits) {\n        return (word >>> bits) | (word << (32 - bits));\n    }\n\n    var sha256 = function (data) {\n        // Copy default state\n        var STATE = DEFAULT_STATE.slice();\n\n        // Caching this reduces occurrences of \".length\" in minified JavaScript\n        // 3 more byte savings! :D\n        var legth = data.length;\n\n        // Pad data\n        var bitLength = legth * 8;\n        var newBitLength = (512 - ((bitLength + 64) % 512) - 1) + bitLength + 65;\n\n        // \"bytes\" and \"words\" are stored BigEndian\n        var bytes = new uint8Array(newBitLength / 8);\n        var words = new uint32Array(bytes.buffer);\n\n        bytes.set(data, 0);\n        // Append a 1\n        bytes[legth] = 0b10000000;\n        // Store length in BigEndian\n        words[words.length - 1] = convertEndian(bitLength);\n\n        // Loop iterator (avoid two instances of \"var\") -- saves 2 bytes\n        var round;\n\n        // Process blocks (512 bits / 64 bytes / 16 words at a time)\n        for (var block = 0; block < newBitLength / 32; block += 16) {\n            var workingState = STATE.slice();\n\n            // Rounds\n            for (round = 0; round < 64; round++) {\n                var MRound;\n                // Expand message\n                if (round < 16) {\n                    // Convert to platform Endianness for later math\n                    MRound = convertEndian(words[block + round]);\n                }\n                else {\n                    var gamma0x = M[round - 15];\n                    var gamma1x = M[round - 2];\n                    MRound =\n                        M[round - 7] + M[round - 16] + (\n                            rightRotate(gamma0x, 7) ^\n                            rightRotate(gamma0x, 18) ^\n                            (gamma0x >>> 3)\n                        ) + (\n                            rightRotate(gamma1x, 17) ^\n                            rightRotate(gamma1x, 19) ^\n                            (gamma1x >>> 10)\n                        )\n                        ;\n                }\n\n                // M array matches platform endianness\n                M[round] = MRound |= 0;\n\n                // Computation\n                var t1 =\n                    (\n                        rightRotate(workingState[4], 6) ^\n                        rightRotate(workingState[4], 11) ^\n                        rightRotate(workingState[4], 25)\n                    ) +\n                    (\n                        (workingState[4] & workingState[5]) ^\n                        (~workingState[4] & workingState[6])\n                    ) + workingState[7] + MRound + ROUND_CONSTANTS[round]\n                    ;\n                var t2 =\n                    (\n                        rightRotate(workingState[0], 2) ^\n                        rightRotate(workingState[0], 13) ^\n                        rightRotate(workingState[0], 22)\n                    ) +\n                    (\n                        (workingState[0] & workingState[1]) ^\n                        (workingState[2] & (workingState[0] ^\n                            workingState[1]))\n                    )\n                    ;\n\n                for (var i = 7; i > 0; i--) {\n                    workingState[i] = workingState[i - 1];\n                }\n                workingState[0] = (t1 + t2) | 0;\n                workingState[4] = (workingState[4] + t1) | 0;\n            }\n\n            // Update state\n            for (round = 0; round < 8; round++) {\n                STATE[round] = (STATE[round] + workingState[round]) | 0;\n            }\n        }\n\n        // Finally the state needs to be converted to BigEndian for output\n        // And we want to return a Uint8Array, not a Uint32Array\n        return new uint8Array(new uint32Array(\n            STATE.map(function (val) { return convertEndian(val); })\n        ).buffer);\n    }\n\n    var hmac = function (key, data) {\n        if (key.length > 64)\n            key = sha256(key);\n\n        if (key.length < 64) {\n            const tmp = new Uint8Array(64);\n            tmp.set(key, 0);\n            key = tmp;\n        }\n\n        // Generate inner and outer keys\n        var innerKey = new Uint8Array(64);\n        var outerKey = new Uint8Array(64);\n        for (var i = 0; i < 64; i++) {\n            innerKey[i] = 0x36 ^ key[i];\n            outerKey[i] = 0x5c ^ key[i];\n        }\n\n        // Append the innerKey\n        var msg = new Uint8Array(data.length + 64);\n        msg.set(innerKey, 0);\n        msg.set(data, 64);\n\n        // Has the previous message and append the outerKey\n        var result = new Uint8Array(64 + 32);\n        result.set(outerKey, 0);\n        result.set(sha256(msg), 64);\n\n        // Hash the previous message\n        return sha256(result);\n    }\n\n    // Convert a string to a Uint8Array, SHA-256 it, and convert back to string\n    const encoder = new TextEncoder(\"utf-8\");\n\n    this.sign = function (inputData, inputKey) {\n        const data = typeof inputData === \"string\" ? encoder.encode(inputData) : inputData;\n        const key = typeof inputKey === \"string\" ? encoder.encode(inputKey) : inputKey;\n        const value = hmac(key, data).reduce((acc, val) =>\n            acc + (\"00\" + val.toString(16)).substr(-2)\n            , \"\")\n        return value.toUpperCase();\n    }\n\n    this.hash = function (str) {\n        return hex(sha256(encoder.encode(str)));\n    }\n\n    this.hex = function (bin) {\n        return bin.reduce((acc, val) =>\n            acc + (\"00\" + val.toString(16)).substr(-2)\n            , \"\");\n    }\n\n}\n\nexport default HmacSHA256\n","function HashMap() {\n\t//特殊关键字(specialKey)用来处理特殊的保留字\n\t//这些保留字主要是Object对象中的固有属性和方法\n\tvar specialKey = [\n\t\t'valueOf',\n\t\t'constructor',\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'ropertyIsEnumerable',\n\t\t'hasOwnProperty',\n\t\t'isprototypeOf',\n\t\t'prototype'\n\t];\n\t//为特殊关键字提供单独存放值的空间\n\tvar speicalValue = new Array(specialKey.length);\n\n\t//特殊关键字存取标记,true 表示该位已经有值\n\tvar speicalFlag = new Array(specialKey.length);\n\n\t//存放普通的关键字，只需要一个普通的Object\n\tvar normalHashMap = {};\n\n\t//将数值插入到HashMap\n\tthis.put = function (key, value) {\n\t\tif (!key) {\n\t\t\treturn false;\n\t\t}\n\t\t//处理特殊关键字\n\t\tfor (var i = 0; i < specialKey.length; i++) {\n\t\t\tif (key == specialKey[i]) {//如果关键字等于某个特殊关键字\n\t\t\t\tspeicalValue[i] = value;\n\t\t\t\tspeicalFlag[i] = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t//处理普通关键字\n\t\tnormalHashMap[key] = value;\n\t\treturn true;\n\t}\n\n\tthis.get = function (key) {\n\t\tif (!key) {\n\t\t\treturn null;\n\t\t}\n\t\t//先处理特殊关键字\n\t\tfor (var i = 0; i < specialKey.length; i++) {\n\t\t\tif (key == specialKey[i]) {\n\t\t\t\tif (speicalValue[i]) {\n\t\t\t\t\treturn speicalValue[i];\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (key in normalHashMap) {\n\t\t\treturn normalHashMap[key];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t//清空HashMap\n\tthis.clear = function () {\n\t\tspeicalValue = new Array(specialKey.length);\n\t\tspeicalFlag = new Array(specialKey.length);\n\t\tnormalHashMap = {};\n\t}\n\n\t//判断是否包含key\n\tthis.containsKey = function (key) {\n\t\t//先处理特殊关键字\n\t\tfor (var i = 0; i < specialKey.length; i++) {\n\t\t\tif (key == specialKey[i]) {\n\t\t\t\tif (speicalFlag[i] == true) {//和关键字相同并且关键字的标志位为true\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//处理普通关键字\n\t\tif (key in normalHashMap) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//判断是否包含Value\n\tthis.containsValue = function (value) {\n\t\tif (!value) {\n\t\t\treturn false;\n\t\t}\n\t\tvar contains = false;\n\t\tfor (var i = 0; i < speicalValue.length; i++) {\n\t\t\tvar v = speicalValue[i];\n\t\t\tif (v == value) {\n\t\t\t\tcontains = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (contains) {\n\t\t\treturn contains;\n\t\t}\n\t\tfor (var key in normalHashMap) {\n\t\t\tvar v = normalHashMap[key];\n\t\t\tif (v == value) {\n\t\t\t\tcontains = true\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn contains;\n\t}\n\n\t//返回hashMap的长度\n\tthis.size = function () {\n\t\tvar size = 0;\n\t\tfor (var i = 0; i < speicalValue.length; i++) {\n\t\t\tif (speicalFlag[i] == true) {\n\t\t\t\tsize++;\n\t\t\t}\n\t\t}\n\t\tfor (var key in normalHashMap) {\n\t\t\tsize++;\n\t\t}\n\t\treturn size;\n\t}\n\n\t//判断hashMap是否为空\n\tthis.isEmpty = function () {\n\t\treturn this.size() == 0 ? true : false;\n\t}\n\n\n\t//根据一个key删除元素\n\tthis.remove = function (key) {\n\t\tif (!key) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < specialKey.length; i++) {\n\t\t\tif (key == specialKey[i] && speicalFlag[i] == true) {\n\t\t\t\tspeicalFlag[i] = null;\n\t\t\t\tspeicalValue[i] = null;\n\t\t\t\treturn true;\n\t\t\t} else if (key == specialKey[i] && speicalFlag[i] == false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tfor (var k in normalHashMap) {\n\t\t\tif (k == key) {\n\t\t\t\tdelete normalHashMap[k];\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t//取得Key值\n\tthis.keySet = function () {\n\t\treturn getStr(0);\n\t}\n\n\t//toString 方法\n\t//{phoneNo=13800138000, userName=tom}\n\tthis.toString = function () {\n\t\treturn getStr(1);\n\t}\n\n\t//返回类似java中Map的entrySet\n\t//[phoneNo=13800138000, userName=tom]\n\tthis.entrySet = function () {\n\t\treturn getStr(2);\n\t};\n\n\t//取得所有的values\n\tthis.values = function () {\n\t\treturn getStr(3);\n\t}\n\n\t//公共方法，用于封装返回字符串\n\tvar getStr = function (flag) {\n\t\t//0： 中括号 返回keys\n\t\t//1:  花括号 返回keys和values组合\n\t\t//2： 中括号 返回keys和values组合\n\t\t//3： 中括号 返回values\n\t\tvar result = \"\";\n\t\tfor (var i = 0; i < specialKey.length; i++) {\n\t\t\tif (speicalValue[i] && speicalFlag[i] == true) {\n\t\t\t\tif (flag == 0) {\n\t\t\t\t\tresult += specialKey[i] + \",\";\n\t\t\t\t} else if (flag == 3) {\n\t\t\t\t\tresult += JSON.stringify(speicalValue[i]) + \",\";\n\t\t\t\t} else if (flag == 2) {\n\t\t\t\t\tresult += specialKey[i] + \"=\" + JSON.stringify(speicalValue[i]) + \",\";\n\t\t\t\t} else {\n\t\t\t\t\tresult += specialKey[i] + \"=\" + JSON.stringify(speicalValue[i]) + \",\" + \" \";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var key in normalHashMap) {\n\t\t\tif (flag == 0) {\n\t\t\t\tresult += key + \",\";\n\t\t\t} else if (flag == 3) {\n\t\t\t\tresult += JSON.stringify(normalHashMap[key]) + \",\";\n\t\t\t} else if (flag == 2) {\n\t\t\t\tresult += key + \"=\" + JSON.stringify(normalHashMap[key]) + \",\";\n\t\t\t} else {\n\t\t\t\tresult += key + \"=\" + JSON.stringify(normalHashMap[key]) + \",\" + \" \";\n\t\t\t}\n\t\t}\n\t\tif (flag == 1) {\n\t\t\tresult = result.substring(0, result.length - 2)\n\t\t\tresult = \"{\" + result + \"}\";\n\t\t} else {\n\t\t\tresult = result.substring(0, result.length - 1);\n\t\t\tresult = \"[\" + result + \"]\";\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport default HashMap\n\n","import { fetch } from './http';\nimport axios from 'axios';\nimport HmacSHA256 from '@/assets/config/hmac_sha256.js'\nimport HashMap from '@/assets/config/hashMap.js'\nexport const signAndTime = (data) => { // 请求头签名鉴权\n  let time = new Date().getTime()\n  const hashMap = new HashMap()\n  hashMap.put('param', data)\n  hashMap.put('timestamp', time)\n  const str = hashMap.toString()\n  let key = '9900J7T2J91992'\n  const hmacSHA = new HmacSHA256()\n  let sign = hmacSHA.sign(str, key)\n  return { sign, timestamp: time }\n}\nexport const urlCheckout = (pro, dev) => { // 由于测试、生产路径不一致，加入切换函数。\n  return api_environment === 'development' ? dev : pro\n}\n\nexport const loginOs = params => axios({\n  //url: '/oauth/token',\n  url: `/auth/oauth/token?grant_type=${params.grant_type}&username=${params.username}&password=${params.password}=&scope=${params.scope}`,\n  method: 'post',\n  headers: {\n    'Authorization': 'Basic aW9jOmlvYw==',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  data: params\n});\nexport const loginUserCenter = params => axios({ // 用户中心自动登录\n  url: '/auth/oauth/token',\n  method: 'post',\n  params\n})\nexport const loginToUserCenter = params => axios({\n  url: '/login',\n  method: 'get',\n  params\n})\n\nexport const getUserInfo = params => axios({\n  url: '/auth/resource/getUserInfo',\n  method: 'post',\n  headers: {\n    'Authorization': `Bearer ${JSON.parse(localStorage.getItem('tokenObj')).access_token}`,\n    'Content-Type': 'application/x-www-form-urlencoded'\n  },\n  data: params\n});\n\nexport const getInfo = params => fetch('/api/get/all', { ...params }, 'POST', false, { withMask: false });\nexport const getWeather = params => axios({\n  url: '/v3/weather/weatherInfo',\n  method: 'get',\n  params: params\n})\n\n/**数据中台 */\nconst dataToken = null;//localStorage.getItem('dataToken');\n\nexport const getDataAuth = (params) => axios({\n  url: '/api/auth/login',\n  method: 'post',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  data: params\n});\n\n\nexport const rad_tra_flow_10min = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/rad_tra_flow_10min',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const real_flow = () => axios({\n  url: urlCheckout(\n    '/service-api/exposureAPIS/path/jtts/actual_flow',\n    '/service-api/exposureAPIS/path/jtts/actual_flow'\n  ),\n  method: 'post',\n  headers: Object.assign({\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  }, signAndTime({})),\n  data: {}\n})\n\n\nexport const predict_flow = () => {\n  return axios({\n    url: urlCheckout(\n      '/service-api/exposureAPIS/path/jtts/pre_flow',\n      '/service-api/exposureAPIS/path/jtts/pre_flow'\n    ),\n    method: 'post',\n    headers: Object.assign({\n      'Authorization': dataToken,\n      'Content-Type': 'application/json'\n    }, signAndTime({})),\n    data: {}\n  })\n}\n\n\n\n\nexport const overflow_rate = () => axios({\n  url: urlCheckout(\n    '/service-api/exposureAPIS/path/jtts/overflow_rate',\n    '/service-api/exposureAPIS/path/jtts/overflow_rate'\n  ),\n  method: 'post',\n  headers: Object.assign({\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  }, signAndTime({})),\n  data: {}\n});\n\n\n\nexport const crossroad_detail_list = params => axios({\n  url: '/service-api/exposureAPIS/path/state_data/crossroad_detail_list',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const road_section_flow_10min = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_section_flow_10min',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const rad_road_flow_latest = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/rad_road_flow_latest',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const ads_sc_rad_tci_10min = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/ads_sc_rad_tci_10min',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const ads_sc_rad_road_accum_tra_flow_10min = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/ads_sc_rad_road_accum_tra_flow_10min',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const ads_sc_rad_road_accum_tra_flow = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/ads_sc_rad_road_accum_tra_flow',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const ads_sc_rad_road_tci_10min = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/ads_sc_rad_road_tci_10min',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const ads_sc_rad_tra_way_flow_10min = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/ads_sc_rad_tra_way_flow_10min',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\nexport const road_section_avgspeed_10min = params => axios({\n  url: '/service-api/exposureAPIS/path/sc/road_section_avgspeed_10min',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const exportWord = (params) => axios({\n  url: '/export/ioc_report',\n  method: 'get',\n  responseType: 'blob',\n  params\n})\n\n\nexport const waitNum = () => axios({\n  url: '/service-api/exposureAPIS/path/rad/wait_num_cnt_16h',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: { crossroad_name: 'total' }\n})\n\n\n\nexport const busLine = () => axios({\n  url: '/service-api/exposureAPIS/path/bus/dim_bus_line_site/D0893EE7D36598184C99FA91353EF63EC763AB1D43446DD3',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: {}\n})\n\n\nexport const tripRatio = () => axios({\n  url: '/service-api/exposureAPIS/path/sdk/bus_passenger_ratio_d/877560E0BC5A941F85BC46241789505C0F33F7A0AD37069E30C40D2A35795C96',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: {}\n})\n\n\nexport const trafficFlow = () => axios({\n  url: '/service-api/exposureAPIS/path/sdk/bus_passenger_10min/877560E0BC5A941F85BC46241789505C4A0FB8832E3182A9',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: {}\n})\n\n\n\n\n\n\nexport const getTrafficJam = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/rad_road_tci_10min/EA1D05C8612BEFFFEC4D45AD57F490A7C426B1038CB303BB',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\nexport const getCarDetail = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_accum_tra_way_flow',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\n\nexport const getCarCatagoryRatio = () => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_accum_tra_way_ratio',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: {}\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const getRoadTci = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_tci_10min3',\n  method: 'post',\n  data: params\n})\n\n\n\nexport const getRoadTciList = () => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_tci_10min2',\n  method: 'post',\n  data: {}\n})\n\n\n\nexport const getRoadTciList2 = () => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_tci_10min22',\n  method: 'post',\n  data: {}\n})\n\n\n\nexport const getTrafficFlow = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_tra_flow_10min_opt_three',\n  method: 'post',\n  data: params\n})\n\n\n\n\n\n\n\n\n\n\n\n\nexport const getCrossName = (params, cancelToken) => axios({\n  cancelToken: cancelToken ? cancelToken : null,\n  url: '/service-api/exposureAPIS/path/rad/devicetocrossroad',\n  method: 'post',\n  data: params\n})\n\n\n\nexport const getAllTciFlow = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_tci_noname3',\n  method: 'post',\n  data: params\n})\n\n\n\nexport const getAllTciFlow2 = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_tci_withname3',\n  method: 'post',\n  data: params\n})\n\n\n\nexport const getAllTrafficFlow = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_accum_tra_flow_10minv2_2',\n  method: 'post',\n  data: params\n})\n\n\n\nexport const getAllTrafficFlow2 = (params) => axios({\n  url: '/service-api/exposureAPIS/path/road/tra_flow_10min_opt1/1D77BB3B6AA1ADA77E583ED26E5748714F88EE2982011C664DB02F93383C0102',\n  method: 'post',\n  data: params\n})\n\n\n\nexport const getIllegalStop = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/illegal_stop_30min/FC3912689E10ED031E76213B23FBA126FF7D1C723AA66607',\n  method: 'post',\n  data: {}\n})\n\n\n\nexport const getTotalTrafficFlow = (params) => axios({\n  url: '/service-api/exposureAPIS/path/sdk/total_traffic_flow/53B6FE7D9606031AB33D9137C25E8A421D4D931D17FA6094',\n  method: 'post',\n  data: params\n})\n\n\nexport const getSdkCarRatio = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/ads_sc_ai_sdk_car_type_10min/F5EDB5AF21E663BDF851FDE862A2FF67DA7AB87D08550A50E5ADFF184FEAAF4B4DB02F93383C0102',\n  method: 'post',\n  data: {}\n})\n\n\nexport const getAvgSpeed = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/avg_speed_10min_total_avg/24439C731D4651A05DF5D1A0931864DA555018E2EB5128CEBBD92619E99A34C9',\n  method: 'post',\n  data: {}\n})\n\n\nexport const getOfflineEventData = params => axios({\n  url: '/service-api/exposureAPIS/path/event/statistics_today_count/0C204FFBF3AE9389C8C878F56EFDF953572CC32C3B408A8B8B1541316D1778BD',\n  method: 'post',\n  data: params\n})\n\nexport const getSpeedDetail = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/ads_sc_rad_avg_speed_realtime/F5EDB5AF21E663BDBD28D1E26123481CD8BB83A79489D82E4E07356E0FBDF2F230C292DA930FC45A',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const getTotalSpeed = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/avg_speed_10min_total_avg/24439C731D4651A05DF5D1A0931864DA555018E2EB5128CEBBD92619E99A34C9',\n  method: 'post',\n  data: params\n})\n\n\n\n\nexport const getInletFlow = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/ads_sc_rad_tra_flow_10min/F5EDB5AF21E663BDD4832E8C25117B6E306D8A987E4985A6D295CEDDC8839DC7',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\nexport const getDevice = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/ads_chaowei_device_managen/F5EDB5AF21E663BDE59E624EF550810FF958938942DAD3FC8A6B730FD2622230',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\nexport const road_section_jam = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_section_jam',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const total_avgspeed = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/total_avgspeed',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const trafficFlowPerhour = (params) => axios({\n  url: '/service-api/exposureAPIS/path/sdk/cross_traffic_flow_perhour',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const roadDetailJam = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_tci_10min3',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const roadDetailSpeed = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/avg_speed_10min1',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const roadDetailPerMonth = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_tra_flow_10min_opt',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const eventDetail = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/event_statistics_realtime/78EA3DDCD75D1CA1CC64926939D37E7414F68EF9E2ACCBBCAD415063E3028B18',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\nexport const flowRatio = (params) => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_tra_flow_10min_opt_ratio',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: params\n});\n\n\n\nexport const standard = (data) => axios({\n  url: '/service-api/exposureAPIS/path/signal_control_optimizing/standard_index_10min/2347AF73714E9B26B603887AE110D80FD0673DB3A43FB07A8775F3DC817ABBDC85FF7A943CC5A66DC426B1038CB303BB',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data\n});\n\n\nexport const line = (data) => axios({\n  url: '/service-api/exposureAPIS/path/signal_control_optimizing/index_linechart/2347AF73714E9B26B603887AE110D80FD0673DB3A43FB07A9246D9A2D939C222ABDD92B5B54F20C5C3D65CC180C68427',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data\n});\n\n\n\nexport const newEnergy = () => axios({\n  url: '/service-api/exposureAPIS/path/sdk/week_xny_ratio/C1225E952FC6685CA77B81EA9EC40E0AD5D59B72C1FA40E9',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: {}\n});\n\n\nexport const bigBrand = () => axios({\n  url: '/service-api/exposureAPIS/path/sdk/ads_sc_ai_sdk_car_da_brand_d/4CF3ADE6C7D4722EF851FDE862A2FF67E793D70755C3E3C5E8B51ABBA33C1EA54DB02F93383C0102',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: {}\n});\n\nexport const smallBrand = () => axios({\n  url: '/service-api/exposureAPIS/path/sdk/ads_sc_ai_sdk_car_xiao_brand_d/4CF3ADE6C7D4722EF851FDE862A2FF6716A5551BFFFAE95BE84375F9F8716255D3B6DFA40C881B36',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: {}\n});\n\nexport const price = () => axios({\n  url: '/service-api/exposureAPIS/path/sdk/ads_sc_ai_sdk_car_price_d/4CF3ADE6C7D4722EF851FDE862A2FF67BAC375C1086A8D53E212564486D6F77D',\n  method: 'post',\n  headers: {\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  },\n  data: {}\n});\n\n\nexport const road_intersection = params => axios({\n  url: '/service-api/exposureAPIS/path/rad/road_cross_relation_list',\n  method: 'post',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  data: {}\n})\n\n\nexport const trafficLight = (data) => axios({\n  url: '/service-api/exposureAPIS/path/taffic_light/timing_plan/E803AAF83AB564D0C371C5F1388EA691D5593CD4ADF62B714DB02F93383C0102?applicationName=主题分析-红绿灯配时&appKey=2208AD707138FD337B9CF885A55E1B441BAD1A08EFB6EA18D5F0D999B18D58CD',\n  headers: Object.assign({\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  }, signAndTime({})),\n  method: 'post',\n  data\n});\n\n\nexport const getEventDay = (data) => axios({\n  url: '/event_day',\n  headers: Object.assign({\n    'Authorization': dataToken,\n    'Content-Type': 'application/json'\n  }, signAndTime({})),\n  method: 'post',\n  data\n});\n"],"sourceRoot":""}