{"version":3,"sources":["webpack:///./src/components/pages/Admin/System/Dict/index.vue?e614","webpack:///./src/components/pages/Admin/System/Dict/Components/DictModal.vue","webpack:///./src/components/pages/Admin/System/Dict/Components/DictModal.vue?7c6b","webpack:///./src/components/pages/Admin/System/Dict/index.vue","webpack:///./src/components/pages/Admin/System/Dict/index.vue?62b2","webpack:///./src/components/pages/Admin/Service/codeMessage.js","webpack:///./src/components/pages/Admin/Service/request.js","webpack:///./src/components/pages/Admin/Service/module/device.js","webpack:///./src/components/pages/Admin/Service/module/system.js","webpack:///./src/utils/utils.js"],"names":["props","__props","emit","__emit","dynamicLabelWidth","computed","getDynamicLabelWidth","id","ref","formRef","form","dictName","dictEncoding","remarks","pid","rules","required","message","trigger","closeModal","saveData","async","validate","value","fetch","systemDictUpdate","systemDictAdd","res","onMounted","currentData","data","JSON","parse","stringify","__exports__","tableData","total","isModalVisible","searchForm","reactive","pageNum","pageSize","handleAdd","handleEdit","index","row","fetchDataList","body","systemDictFind","length","error","console","log","search","resetForm","resetFields","handleDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","then","systemDictDelete","ElMessage","err","catch","handleSizeChange","val","handleCurrentChange","codeMessage","200","201","202","204","400","401","403","404","405","406","408","410","422","500","501","502","503","504","505","axios","defaults","headers","post","axiosInstance","create","timeout","interceptors","request","use","config","accessToken","sessionStorage","getItem","Authorization","Promise","reject","response","status","resolve","includes","requestObj","get","url","options","delete","put","patch","method","getDeviceList","deviceAddList","deviceEditList","deviceDeleteList","deviceExcelExport","deviceAlarmPage","deviceAlarmExpire","params","systemDictList","systemrpcFind","systemLogList","systemLogDel","baseWidthPx","viewportBase","actualViewportWidth","document","documentElement","clientWidth","scaleFactor"],"mappings":"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","file":"js/chunk-f87db6ec.313cbc2b.js","sourcesContent":["export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=001f3980&lang=less\"","<template>\n  <el-dialog \n    v-model=\"props.visible\" \n    :title=\"!!id ? '字典新增' : '字典编辑'\"\n    :before-close=\"closeModal\"\n    width=\"35%\"\n   >\n    <el-form\n      ref=\"formRef\"\n      :model=\"form\"\n      :rules=\"rules\"\n      :label-width=\"dynamicLabelWidth\"\n      status-icon\n    >\n      <el-form-item label=\"字典名称\" prop=\"dictName\">\n        <el-input v-model=\"form.dictName\" />\n      </el-form-item>\n      <el-form-item label=\"字典编码\" prop=\"dictEncoding\">\n        <el-input v-model=\"form.dictEncoding\" :disabled=\"!!id\"/>\n      </el-form-item>\n      <el-form-item label=\"备注\" prop=\"remarks\">\n        <el-input v-model=\"form.remarks\" />\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <div class=\"dialog-footer\">\n        <el-button @click=\"closeModal\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"saveData\">确 认</el-button>\n      </div>\n    </template>\n  </el-dialog>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { systemDictAdd, systemDictUpdate } from '../../../Service/api'\nimport { getDynamicLabelWidth } from '@/utils/utils.js';\nconst props = defineProps({\n  visible: {\n    type: Boolean,\n    default: true,\n  },\n  onClose: {\n    type: Function,\n    default: () => {}\n  },\n  currentData: {\n    type: Object,\n    default: () => {}\n  }\n})\n\nconst emit = defineEmits(['close', 'success'])\n\nconst dynamicLabelWidth = computed(() => getDynamicLabelWidth(100))\n\nconst id = ref()\nconst formRef = ref(null)\n\nconst form = ref({\n  dictName: '',\n  dictEncoding: '',\n  remarks: '',\n  pid: 0,\n})\n\nconst rules = {\n  dictName: [\n    {\n      required: true,\n      message: '请输入字典名称',\n      trigger: 'blur',\n    },\n  ],\n  dictEncoding: [\n    {\n      required: true,\n      message: '请输入字典类型',\n      trigger: 'blur',\n    },\n  ],\n}\n\nconst closeModal = () => {\n  emit('close')\n}\n\nconst saveData = async () => {\n  const validate = await formRef.value.validate()\n  if (!validate) return\n  const fetch = id.value ? systemDictUpdate : systemDictAdd;\n  const res = await fetch(form.value)\n  if (res) {\n    emit('success')\n    closeModal() // 关闭弹窗\n  }\n}\n\nonMounted(() => {\n  if (props.currentData.id) {\n    const data = JSON.parse(JSON.stringify(props.currentData))\n    form.value = data\n    id.value = data.id\n  }\n})\n</script>\n\n<style scoped>\n</style>\n","import script from \"./DictModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DictModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"dict-page\">\n    <el-breadcrumb>\n      <el-breadcrumb-item>字典管理</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card shadow=\"never\" class=\"search-card\">\n      <!-- 搜索表单 -->\n      <el-form :inline=\"true\" :model=\"searchForm\" ref=\"formRef\">\n        <el-form-item label=\"字典名称\" prop=\"dictName\">\n          <el-input v-model=\"searchForm.dictName\" placeholder=\"字典名称\" />\n        </el-form-item>\n        <el-form-item label=\"字典编码\" prop=\"dictEncoding\">\n          <el-input v-model=\"searchForm.dictEncoding\" placeholder=\"字典编码\" />\n        </el-form-item>\n        <el-form-item>\n          <el-button @click=\"resetForm\">重 置</el-button>\n          <el-button type=\"primary\" @click=\"search\">查 询</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-card shadow=\"never\" class=\"table-card\">\n      <!-- 按钮操作区 -->\n      <el-button type=\"primary\" @click=\"handleAdd\">新增</el-button>\n      <!-- 设备列表 -->\n      <el-table :data=\"tableData\" border>\n        <el-table-column prop=\"dictName\" label=\"字典名称\" align=\"center\"/>\n        <el-table-column porp=\"dictEncoding\" label=\"字典编码\" align=\"center\" :show-overflow-tooltip=\"true\">\n          <template #default=\"scope\">\n            <router-link :to=\"'/admin/system/dict/' + scope.row.id\" class=\"link-type\">\n              <span>{{ scope.row.dictEncoding }}</span>\n            </router-link>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"remarks\" label=\"备注\" align=\"center\"/>\n        <el-table-column prop=\"createTime\" label=\"创建时间\" align=\"center\"/>\n        <el-table-column label=\"操作\" align=\"center\">\n          <template #default=\"scope\">\n            <el-button text size=\"small\" type=\"primary\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n            <el-button text size=\"small\" type=\"primary\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页器 -->\n      <el-pagination\n        v-model:current-page=\"searchForm.pageNum\"\n        v-model:page-size=\"searchForm.pageSize\"\n        :page-sizes=\"[10, 20, 50, 100, 200]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        size=\"small\"\n        background\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n    <DictModal\n      v-if=\"isModalVisible\"\n      :currentData=\"currentData\"\n      @close=\"isModalVisible = false\"\n      @success=\"fetchDataList\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { systemDictDelete, systemDictFind } from '../../Service/api'\nimport DictModal from './Components/DictModal.vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\n\nconst tableData = ref([])\nconst total = ref(0) // 用于记录总条目数\nconst formRef = ref()\nconst isModalVisible = ref(false)\nconst currentData = ref({})\n\nconst searchForm = reactive({\n  pageNum: 1,\n  pageSize: 10\n})\n\nconst handleAdd = () => {\n  currentData.value = {};\n  isModalVisible.value = true\n}\n\nconst handleEdit = (index, row) => {\n  currentData.value = row;\n  isModalVisible.value = true\n}\n\nconst fetchDataList = async () => {\n  try {\n    const { body } = await systemDictFind(searchForm)\n    if (body) {\n      tableData.value = body // 更新 tableData 数据\n      total.value = body.length // 更新总条目数\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst search = () => {\n  searchForm.pageNum = 1 // 查询时重置页码\n  fetchDataList()\n}\n\nconst resetForm = () => {\n  searchForm.pageNum = 1\n  searchForm.pageSize = 10\n  formRef.value.resetFields()\n  fetchDataList() // 重置后重新获取数据\n}\n\nconst handleDelete = (index, row) => {\n  ElMessageBox.confirm(\n    '确定要删除吗?',\n    '提示',\n    {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning',\n    }\n  )\n    .then(async () => {\n      try {\n        await systemDictDelete(row)\n        ElMessage({\n          type: 'success',\n          message: '删除成功',\n        })\n        fetchDataList()\n      }catch(err) {\n        console.log(err);\n      }\n    })\n    .catch(() => {})\n}\n\nconst handleSizeChange = (val) => {\n  searchForm.pageSize = val\n  fetchDataList() // 当页面大小变化时重新获取数据\n}\n\nconst handleCurrentChange = (val) => {\n  searchForm.pageNum = val\n  fetchDataList() // 当当前页码变化时重新获取数据\n}\n\nonMounted(() => {\n  fetchDataList()\n})\n</script>\n\n<style lang=\"less\">\n.dict-page {\n  .el-breadcrumb {\n    margin-bottom: 20px;\n  }\n  .search-card {\n    margin-bottom: 20px;\n    .el-card__body {\n      padding-bottom: 0;\n    }\n  }\n\n  .table-card {\n    .el-card__body {\n      text-align: right;\n      .el-table {\n        margin-top: 20px;\n      }\n      .el-pagination {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=001f3980&lang=less\"\n\nconst __exports__ = script;\n\nexport default __exports__","const codeMessage = {\n  200: '服务器成功返回请求的数据。',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '请求错误',\n  401: '未授权，请登录',\n  403: '拒绝访问',\n  404: '请求地址出错',\n  405: '请求方法不被允许。',\n  406: '请求的格式不可得。',\n  408: '请求超时',\n  410: '请求的资源被永久删除',\n  422: '创建一个对象时，发生一个验证错误。',\n  500: '服务器内部错误',\n  501: '服务未实现',\n  502: '网关错误',\n  503: '服务不可用，服务器暂时过载或维护',\n  504: '网关超时',\n  505: 'HTTP版本不受支持'\n}\n\nexport default codeMessage\n","import axios from 'axios'\nimport codeMessage from './codeMessage'\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'\n\nconst axiosInstance = axios.create({\n  timeout: 10000\n})\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const accessToken = sessionStorage.getItem('access_token')\n    if (accessToken) {\n      return {\n        ...config,\n        headers: {\n          ...config.headers,\n          Authorization: accessToken ? `Bearer ${accessToken}` : ''\n        }\n      }\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  }\n)\n\naxiosInstance.interceptors.response.use(\n  (response) => {\n    if (response.status === 200) {\n      return Promise.resolve(response.data)\n    } else {\n      return Promise.reject(response)\n    }\n  },\n  (error) => {\n    if (error.message.includes('timeout')) {\n      console.error('timeout')\n    } else {\n      console.error(\n        codeMessage[error.response.status]\n      )\n      if (error.response.status === 403) console.error('403')\n    }\n    Promise.reject(error)\n  }\n)\n\nconst requestObj = {\n  get: (url, options) => {\n    return axiosInstance.get(url, options)\n  },\n  delete: (url, options) => {\n    return axiosInstance.delete(url, options)\n  },\n  post: (url, data, options) => {\n    return axiosInstance.post(url, data, options)\n  },\n  put: (url, data, options) => {\n    return axiosInstance.put(url, data, options)\n  },\n  patch: (url, data,  options) => {\n    return axiosInstance.patch(url, data, options)\n  }\n}\n\nconst request = (url, options) => {\n  const method = options.method !== null ? options.method : 'GET';\n\n  if (method === 'GET') {\n    return requestObj.get(url, options)\n  }\n  if (method === 'DELETE') {\n    return requestObj.delete(url, options)\n  }\n  if (method === 'POST') {\n    return requestObj.post(url, options.data, options)\n  }\n  if (method === 'PUT') {\n    return requestObj.post(url, options.data, options)\n  }\n  if (method === 'PATCH') {\n    return requestObj.patch(url, options.data, options)\n  }\n\n  return requestObj.get(url, options)\n}\n\nexport { axiosInstance, request }\n","import { request } from '../request'\n\nexport const getDeviceList = (data) => {\n  return request('/device/api/list', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceAddList = (data) => {\n  return request('/device/add', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceEditList = (data) => {\n  return request('/device/edit', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceDeleteList = (data) => {\n  return request('/device/del', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceDetailList = (data) => {\n  return request('/device/selectById', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceExcelImport = (data) => {\n  return request('/device/excelImport', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceExcelExport = (data) => {\n  return request('/device/excelExport', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceAlarmPage = (data) => {\n  return request('/device/alarm/page', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const deviceAlarmExpire = (data) => {\n  return request('/device/alarm/expire', {\n    method: 'POST',\n    data\n  })\n}\n","import { request } from '../request'\n\nexport const systemDictAdd = (data) => {\n  return request('/system/dict/add', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictDelete = (data) => {\n  return request('/system/dict/delete', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictFind = (params) => {\n  return request('/system/dict/find', {\n    method: 'GET',\n    params\n  })\n}\n\nexport const systemDictFindAll = (data) => {\n  return request('/system/dict/findAll', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictList = (data) => {\n  return request('/system/dict/list', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictRpcFind = (data) => {\n  return request('/system/dict/rpc/find', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemDictUpdate = (data) => {\n  return request('/system/dict/update', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemrpcFind = (params) => {\n  return request('/system/dict/rpc/find', {\n    method: 'GET',\n    params\n  })\n}\n\nexport const systemLogList = (data) => {\n  return request('/system/log/list', {\n    method: 'POST',\n    data\n  })\n}\n\nexport const systemLogDel = (data) => {\n  return request('/system/log/del', {\n    method: 'POST',\n    data\n  })\n}\n","\n\n/**\n * 动态计算 label-width\n * @param {number} baseWidthPx - 基础 px 宽度，例如 120\n * @returns {string} - 动态计算后的宽度，单位为 px\n */\nexport function getDynamicLabelWidth(baseWidthPx = 120) {\n  const viewportBase = 1920; // 基础视口宽度，一般以设计稿宽度为准\n  const actualViewportWidth = document.documentElement.clientWidth;\n\n  const scaleFactor = actualViewportWidth / viewportBase;\n  return `${baseWidthPx * scaleFactor}px`;\n}\n"],"sourceRoot":""}